{"version":3,"file":"main.js","mappings":"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","sources":["webpack://gnosys/./apps/gnosys-api/src/app/app.module.ts","webpack://gnosys/./apps/gnosys-api/src/app/auth/auth.module.ts","webpack://gnosys/./apps/gnosys-api/src/app/auth/auth.service.ts","webpack://gnosys/./apps/gnosys-api/src/app/auth/constants.ts","webpack://gnosys/./apps/gnosys-api/src/app/auth/jwt.strategy.ts","webpack://gnosys/./apps/gnosys-api/src/app/auth/refresh-token-schema.ts","webpack://gnosys/./apps/gnosys-api/src/app/mail/mail.module.ts","webpack://gnosys/./apps/gnosys-api/src/app/mail/mail.service.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/dto/create-forgot-password.dto.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/dto/create-user.dto.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/dto/login-user.dto.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/dto/reset-password.dto.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/dto/verify-uuid.dto.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/schemas/forgot-password.schema.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/schemas/user.schema.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/users.controller.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/users.module.ts","webpack://gnosys/./apps/gnosys-api/src/app/users/users.service.ts","webpack://gnosys/./apps/gnosys-api/src/environments/environment.ts","webpack://gnosys/external commonjs \"@nestjs/common\"","webpack://gnosys/external commonjs \"@nestjs/core\"","webpack://gnosys/external commonjs \"@nestjs/jwt\"","webpack://gnosys/external commonjs \"@nestjs/mongoose\"","webpack://gnosys/external commonjs \"@nestjs/passport\"","webpack://gnosys/external commonjs \"@nestjs/serve-static\"","webpack://gnosys/external commonjs \"@sendgrid/mail\"","webpack://gnosys/external commonjs \"bcrypt\"","webpack://gnosys/external commonjs \"class-validator\"","webpack://gnosys/external commonjs \"cryptr\"","webpack://gnosys/external commonjs \"date-fns\"","webpack://gnosys/external commonjs \"express\"","webpack://gnosys/external commonjs \"jsonwebtoken\"","webpack://gnosys/external commonjs \"mongoose\"","webpack://gnosys/external commonjs \"passport-jwt\"","webpack://gnosys/external commonjs \"request-ip\"","webpack://gnosys/external commonjs \"tslib\"","webpack://gnosys/external commonjs \"uuid\"","webpack://gnosys/external commonjs \"validator\"","webpack://gnosys/external node-commonjs \"path\"","webpack://gnosys/webpack/bootstrap","webpack://gnosys/./apps/gnosys-api/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ServeStaticModule } from '@nestjs/serve-static';\n\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { MailModule } from './mail/mail.module';\n\n// import { AppController } from './app.controller';\n// import { AppService } from './app.service';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(process.env.MONGO_URI),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'gnosys'),\n      exclude: ['/api*'],\n    }),\n    AuthModule,\n    UsersModule,\n    MailModule,\n  ],\n  // controllers: [AppController],\n  // providers: [AppService],\n})\nexport class AppModule {}\n","import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from '../users/schemas/user.schema';\nimport { RefreshTokenSchema } from './refresh-token-schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: 'User', schema: UserSchema },\n      { name: 'RefreshToken', schema: RefreshTokenSchema },\n    ]),\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: process.env.JWT_EXPIRATION },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","import {\n  BadRequestException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { sign } from 'jsonwebtoken';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport Cryptr from 'cryptr';\nimport { User } from '../users/interfaces/user.interface';\nimport { RefreshToken } from './refresh-token.interface';\nimport { v4 } from 'uuid';\nimport { getClientIp } from 'request-ip';\nimport { Request } from 'express';\n\ninterface JwtPayload {\n  userId: string;\n}\n\n@Injectable()\nexport class AuthService {\n  cryptr: Cryptr;\n  constructor(\n    @InjectModel('User') private readonly userModel: Model<User>,\n    @InjectModel('RefreshToken')\n    private readonly refreshTokenModel: Model<RefreshToken>,\n    private readonly jwtService: JwtService\n  ) {\n    this.cryptr = new Cryptr(process.env.ENCRYPT_JWT_SECRET);\n  }\n\n  async createAccessToken(userId: string) {\n    const accessToken = sign({ userId }, process.env.JWT_SECRET, {\n      expiresIn: process.env.JWT_EXPIRATION,\n    });\n    // return this.encryptText(accessToken);\n    return accessToken;\n  }\n\n  async createRefreshToken(req: Request, userId) {\n    const refreshToken = new this.refreshTokenModel({\n      userId,\n      refreshToken: v4(),\n      ip: this.getIp(req),\n      browser: this.getBrowserInfo(req),\n      country: this.getCountry(req),\n    });\n    await refreshToken.save();\n    return refreshToken.refreshToken;\n  }\n\n  async validateUser(jwtPayload: JwtPayload): Promise<User> {\n    const user = await this.userModel.findOne({\n      _id: jwtPayload.userId,\n      emailVerified: true,\n    });\n    if (!user) {\n      throw new UnauthorizedException('User not authorized.');\n    }\n    return user;\n  }\n\n  // JWT Extractor\n\n  private jwtExtractor(request: Request) {\n    let token = null;\n    if (request.header('x-token')) {\n      token = request.get('x-token');\n    } else if (request.headers.authorization) {\n      token = request.headers.authorization\n        .replace('Bearer ', '')\n        .replace(' ', '');\n    } else if (request.body.token) {\n      token = request.body.token.replace(' ', '');\n    }\n    if (request.query.token) {\n      token = request.body.token.replace(' ', '');\n    }\n    const cryptr = new Cryptr(process.env.ENCRYPT_JWT_SECRET);\n    if (token) {\n      try {\n        token = cryptr.decrypt(token);\n      } catch (err) {\n        throw new BadRequestException('Bad request.');\n      }\n    }\n    return token;\n  }\n\n  // Helpers\n\n  returnJwtExtractor() {\n    return this.jwtExtractor;\n  }\n\n  getIp(req: Request): string {\n    return getClientIp(req);\n  }\n\n  getBrowserInfo(req: Request): string {\n    return req.header['user-agent'] || 'XX';\n  }\n\n  getCountry(req: Request): string {\n    return req.header['cf-ipcountry'] ? req.header['cf-ipcountry'] : 'XX';\n  }\n\n  encryptText(text: string): string {\n    return this.cryptr.encrypt(text);\n  }\n}\n","export const jwtConstants = {\n  secret: 'secretKey',\n};\n","import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n","import { Schema } from 'mongoose';\n\nexport const RefreshTokenSchema = new Schema(\n  {\n    userId: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n      required: true,\n    },\n    refreshToken: {\n      type: String,\n      required: true,\n    },\n    ip: {\n      type: String,\n      required: true,\n    },\n    browser: {\n      type: String,\n      required: true,\n    },\n    country: {\n      type: String,\n      required: true,\n    },\n  },\n  {\n    versionKey: false,\n    timestamps: true,\n  }\n);\n","import { Module } from '@nestjs/common';\nimport { MailService } from '@sendgrid/mail';\nimport { GnosysMailService } from './mail.service';\n\n@Module({\n  exports: [GnosysMailService],\n  providers: [MailService, GnosysMailService],\n})\nexport class MailModule {}\n","import { Injectable } from '@nestjs/common';\nimport { MailService } from '@sendgrid/mail';\nimport { User } from '@gnosys/interfaces';\n\nimport { environment } from '../../environments/environment';\nimport { ForgotPasswordDocument } from '../users/schemas/forgot-password.schema';\nimport { UserDocument } from '../users/schemas/user.schema';\n\n@Injectable()\nexport class GnosysMailService {\n  constructor(private mailService: MailService) {}\n\n  public async sendUserConfirmation(user: UserDocument) {\n    const uuid = user.verification;\n    this.mailService.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const url = `http://${environment.gnosysURL}/#/verify/${uuid}`;\n\n    await this.mailService.send({\n      to: user.email,\n      from: 'gnosys Support Team <gnosys@gnosys.tech>',\n      templateId: 'd-1c3af41cf45942e4a42594cb59365aa4',\n      dynamicTemplateData: {\n        givenName: user.firstName,\n        url,\n      },\n    });\n  }\n\n  public async sendPasswordResetLink(forgotPassword: ForgotPasswordDocument) {\n    const uuid = forgotPassword.verification;\n    this.mailService.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const url = `http://${environment.gnosysURL}/#/reset/${uuid}`;\n\n    await this.mailService.send({\n      to: forgotPassword.email,\n      from: 'gnosys Support Team <gnosys@gnosys.tech>',\n      templateId: 'd-a1208720734d4abd877de89f90904c4f',\n      dynamicTemplateData: { url },\n    });\n  }\n}\n","import {\n  IsNotEmpty,\n  MinLength,\n  MaxLength,\n  IsEmail,\n  IsString,\n} from 'class-validator';\n\nexport class CreateForgotPasswordDto {\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(255)\n  @IsEmail()\n  readonly email: string;\n}\n","import {\n  IsNotEmpty,\n  MinLength,\n  MaxLength,\n  IsEmail,\n  IsString,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(255)\n  @IsEmail()\n  readonly email: string;\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(1024)\n  readonly password: string;\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(255)\n  givenName: string;\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(255)\n  familyName: string;\n}\n","import {\n  IsNotEmpty,\n  MinLength,\n  MaxLength,\n  IsEmail,\n  IsString,\n} from 'class-validator';\n\nexport class LoginUserDto {\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(255)\n  @IsEmail()\n  readonly email: string;\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(1024)\n  readonly password: string;\n}\n","import {\n  IsNotEmpty,\n  MinLength,\n  MaxLength,\n  IsEmail,\n  IsString,\n} from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(255)\n  @IsEmail()\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(1024)\n  readonly password: string;\n}\n","import { IsNotEmpty, IsUUID } from 'class-validator';\n\nexport class VerifyUuidDto {\n  @IsNotEmpty()\n  @IsUUID()\n  readonly verification: string;\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport validator from 'validator';\n\nexport type ForgotPasswordDocument = ForgotPassword & Document;\n\n@Schema()\nexport class ForgotPassword {\n  @Prop({\n    required: [true, 'Email is blank'],\n    validate: validator.isEmail,\n  })\n  email: string;\n\n  @Prop({ required: true, validate: validator.isUUID })\n  verification: string;\n\n  @Prop({ default: false })\n  firstUsed: boolean;\n\n  @Prop({ default: false })\n  finalUsed: boolean;\n\n  @Prop({ required: true })\n  expires: Date;\n\n  @Prop({ required: true })\n  ip: string;\n\n  @Prop({ required: true })\n  browser: string;\n\n  @Prop({ required: true })\n  country: string;\n\n  @Prop()\n  ipChanged: string;\n\n  @Prop()\n  browserChanged: string;\n\n  @Prop()\n  countryChanged: string;\n}\n\nexport const ForgotPasswordSchema =\n  SchemaFactory.createForClass(ForgotPassword);\n\nForgotPasswordSchema.set('timestamps', true);\nForgotPasswordSchema.set('versionKey', false);\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport validator from 'validator';\nimport * as bcrypt from 'bcrypt';\n\nexport type UserDocument = User & Document;\n\n@Schema()\nexport class User {\n  @Prop({\n    lowercase: true,\n    validate: validator.isEmail,\n    maxlength: 256,\n    minlength: 6,\n    required: [true, 'BLANK_EMAIL'],\n    unique: true,\n  })\n  email: string;\n\n  @Prop({ maxlength: 1024, minlength: 8, required: [true, 'BLANK_PASSWORD'] })\n  password: string;\n\n  @Prop({ required: [true, 'BLANK_FIRST_NAME'] })\n  firstName: string;\n\n  @Prop({ required: [true, 'BLANK_LAST_NAME'] })\n  lastName: string;\n\n  @Prop({ default: ['user'] })\n  roles: [string];\n\n  @Prop({ validate: validator.isUUID })\n  verification: string;\n\n  @Prop({ default: false })\n  emailVerified: boolean;\n\n  @Prop({ default: Date.now })\n  verificationExpires: Date;\n\n  @Prop({ default: 0 })\n  loginAttempts: number;\n\n  @Prop({ default: Date.now })\n  blockExpires: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre('save', async function (next) {\n  try {\n    if (!this.isModified('password')) {\n      return next();\n    }\n    const hashed = await bcrypt.hash(this['password'], 10);\n    this['password'] = hashed;\n    return next();\n  } catch (err) {\n    return next(err);\n  }\n});\n\nUserSchema.virtual('uid').get(function () {\n  return this._id.toHexString();\n});\n\nUserSchema.virtual('displayName').get(function () {\n  return `${this.firstName} ${this.lastName}`;\n});\n\nUserSchema.set('toJSON', {\n  virtuals: true,\n  transform: function (doc, ret) {\n    delete ret._id;\n    delete ret.password;\n    delete ret.id;\n  },\n});\n\nUserSchema.set('toObject', { virtuals: true });\n\nUserSchema.set('timestamps', true);\nUserSchema.set('versionKey', false);\n","import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  UseGuards,\n  Req,\n  HttpCode,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CreateForgotPasswordDto } from './dto/create-forgot-password.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { VerifyUuidDto } from './dto/verify-uuid.dto';\nimport { UsersService } from './users.service';\n\n@Controller('user')\nexport class UsersController {\n  constructor(private readonly userService: UsersService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  async register(@Body() createUserDto: CreateUserDto) {\n    return await this.userService.create(createUserDto);\n  }\n\n  @Post('verify')\n  async verifyEmail(@Req() req: Request, @Body() verifyUuidDto: VerifyUuidDto) {\n    return await this.userService.verifyEmail(req, verifyUuidDto);\n  }\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  async login(@Req() req: Request, @Body() loginUserDto: LoginUserDto) {\n    return await this.userService.login(req, loginUserDto);\n  }\n\n  @Post('forgot-password')\n  @HttpCode(HttpStatus.OK)\n  async forgotPassword(\n    @Req() req: Request,\n    @Body() createForfotPasswordDto: CreateForgotPasswordDto\n  ) {\n    return await this.userService.forgotPassword(req, createForfotPasswordDto);\n  }\n\n  @Post('forgot-password-verify')\n  @HttpCode(HttpStatus.OK)\n  async forgotPasswordVerify(\n    @Req() req: Request,\n    @Body() verifyUuidDto: VerifyUuidDto\n  ) {\n    return await this.userService.forgotPasswordVerify(req, verifyUuidDto);\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() resetPasswordDto: ResetPasswordDto) {\n    return await this.userService.resetPassword(resetPasswordDto);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { User, UserSchema } from './schemas/user.schema';\nimport {\n  ForgotPassword,\n  ForgotPasswordSchema,\n} from './schemas/forgot-password.schema';\nimport { AuthModule } from '../auth/auth.module';\nimport { MailModule } from '../mail/mail.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    MongooseModule.forFeature([\n      { name: ForgotPassword.name, schema: ForgotPasswordSchema },\n    ]),\n    AuthModule,\n    MailModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n","import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Model } from 'mongoose';\nimport { v4 } from 'uuid';\nimport { addHours } from 'date-fns';\nimport * as bcrypt from 'bcrypt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport {\n  ForgotPassword,\n  ForgotPasswordDocument,\n} from './schemas/forgot-password.schema';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport { AuthService } from '../auth/auth.service';\n\nimport { GnosysMailService } from '../mail/mail.service';\nimport { VerifyUuidDto } from './dto/verify-uuid.dto';\nimport { CreateForgotPasswordDto } from './dto/create-forgot-password.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\n\n@Injectable()\nexport class UsersService {\n  hours_to_verify_signup = 12;\n  hours_to_verify = 4;\n  login_attempts_to_block = 6;\n  hours_to_block = 8;\n\n  constructor(\n    @InjectModel(User.name) private userModel: Model<UserDocument>,\n    @InjectModel(ForgotPassword.name)\n    private forgotPasswordModel: Model<ForgotPasswordDocument>,\n    private readonly mailService: GnosysMailService,\n    private readonly authService: AuthService\n  ) {}\n\n  async create(createUserDto: CreateUserDto): Promise<UserDocument> {\n    const createdUser = new this.userModel(createUserDto);\n    await this.isEmailUnique(createdUser.email);\n    this.setRegistrationInfo(createdUser);\n    await this.sendRegistrationEmail(createdUser);\n    return await createdUser.save();\n  }\n\n  async verifyEmail(req: Request, veryfyUuidDto: VerifyUuidDto) {\n    const user = await this.findUserByVerification(veryfyUuidDto.verification);\n    await this.setUserAsVerified(user);\n    return {\n      email: user.email,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      displayName: `${user.firstName} ${user.lastName}`,\n      emailVerified: user.emailVerified,\n      accessToken: await this.authService.createAccessToken(user._id),\n      refreshToken: await this.authService.createRefreshToken(req, user._id),\n      roles: user.roles,\n    };\n  }\n\n  async login(req: Request, loginUserDto: LoginUserDto) {\n    const user = await this.findUserByEmail(loginUserDto.email);\n    this.isUserBlocked(user);\n    await this.checkPassword(loginUserDto.password, user);\n    await this.passwordsDoMatch(user);\n    return {\n      email: user.email,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      displayName: `${user.firstName} ${user.lastName}`,\n      emailVerified: user.emailVerified,\n      accessToken: await this.authService.createAccessToken(user._id),\n      refreshToken: await this.authService.createRefreshToken(req, user._id),\n      roles: user.roles,\n    };\n  }\n\n  async forgotPassword(\n    req: Request,\n    createForgotPasswordDto: CreateForgotPasswordDto\n  ) {\n    await this.findUserByEmail(createForgotPasswordDto.email);\n    await this.saveForgotPassword(req, createForgotPasswordDto);\n    return {\n      email: createForgotPasswordDto.email,\n      message: 'Verification sent.',\n    };\n  }\n\n  async forgotPasswordVerify(req: Request, verifyUuidDto: VerifyUuidDto) {\n    const forgotPassword = await this.findForgotPasswordByUuid(verifyUuidDto);\n    await this.setForgotPasswordFirstUsed(req, forgotPassword);\n    return {\n      email: forgotPassword.email,\n      message: 'Now reset your password.',\n    };\n  }\n\n  async resetPassword(resetPasswordDto: ResetPasswordDto) {\n    const forgotPassword = await this.findForgotPasswordByEmail(\n      resetPasswordDto\n    );\n    await this.setForgotPasswordFinalUsed(forgotPassword);\n    await this.resetUserPassword(resetPasswordDto);\n    return {\n      email: resetPasswordDto.email,\n      message: 'Password successfully changed.',\n    };\n  }\n\n  async findAll(): Promise<User[]> {\n    return this.userModel.find().exec();\n  }\n\n  //\n  // Private Methods (operate on Mongoose Documents)\n  //\n\n  private async isEmailUnique(email: string) {\n    const user = await this.userModel.findOne({ email, verified: true });\n    if (user) {\n      throw new BadRequestException('User already exists.');\n    }\n  }\n\n  private setRegistrationInfo(user: UserDocument): void {\n    user.verification = v4();\n    user.verificationExpires = addHours(new Date(), this.hours_to_verify);\n  }\n\n  private async findUserByVerification(\n    verification: string\n  ): Promise<UserDocument> {\n    const user = await this.userModel.findOne({\n      verification,\n      emailVerified: false,\n      verificationExpires: { $gt: new Date() },\n    });\n    if (!user) {\n      throw new BadRequestException('Verification Expired.');\n    }\n    return user;\n  }\n\n  private async findUserByEmail(email: string): Promise<UserDocument> {\n    const user = await this.userModel.findOne({ email, emailVerified: true });\n    if (!user) {\n      throw new NotFoundException('Wrong or not verified email.');\n    }\n    return user;\n  }\n\n  private isUserBlocked(user: UserDocument): void {\n    if (user.blockExpires > new Date(Date.now())) {\n      throw new ConflictException('User has been blocked, try again later.');\n    }\n  }\n\n  private async checkPassword(attemptPass: string, user: UserDocument) {\n    const match = await bcrypt.compare(attemptPass, user.password);\n    if (!match) {\n      await this.passwordsDoNotMatch(user);\n      throw new NotFoundException(\n        `Wrong email or password (${user.loginAttempts}/${this.login_attempts_to_block}).`\n      );\n    }\n    return match;\n  }\n\n  private async passwordsDoNotMatch(user: UserDocument) {\n    user.loginAttempts += 1;\n    await user.save();\n    if (user.loginAttempts >= this.login_attempts_to_block) {\n      await this.blockUser(user);\n      throw new ConflictException('User blocked.');\n    }\n  }\n\n  private async blockUser(user: UserDocument) {\n    user.blockExpires = addHours(new Date(), this.hours_to_block);\n    await user.save();\n  }\n\n  private async setUserAsVerified(user: UserDocument) {\n    user.emailVerified = true;\n    await user.save();\n  }\n\n  private async passwordsDoMatch(user: UserDocument) {\n    user.loginAttempts = 0;\n    await user.save();\n  }\n\n  private async sendRegistrationEmail(user: UserDocument) {\n    await this.mailService.sendUserConfirmation(user);\n  }\n\n  // Forgot password related\n\n  private async saveForgotPassword(\n    req: Request,\n    createForgotPasswordDto: CreateForgotPasswordDto\n  ) {\n    const forgotPassword = await this.forgotPasswordModel.create({\n      email: createForgotPasswordDto.email,\n      verification: v4(),\n      expires: addHours(new Date(), this.hours_to_verify),\n      ip: this.authService.getIp(req),\n      browser: this.authService.getBrowserInfo(req),\n      country: this.authService.getCountry(req),\n    });\n    await this.mailService.sendPasswordResetLink(forgotPassword);\n    await forgotPassword.save();\n  }\n\n  private async findForgotPasswordByUuid(\n    verifyUuidDto: VerifyUuidDto\n  ): Promise<ForgotPasswordDocument> {\n    const forgotPassword = await this.forgotPasswordModel.findOne({\n      verification: verifyUuidDto.verification,\n      firstUsed: false,\n      finalUsed: false,\n      expires: { $gt: new Date() },\n    });\n    if (!forgotPassword) {\n      throw new BadRequestException('Invalid or expired reset link.');\n    }\n    return forgotPassword;\n  }\n\n  private async setForgotPasswordFirstUsed(\n    req: Request,\n    forgotPassword: ForgotPasswordDocument\n  ) {\n    forgotPassword.firstUsed = true;\n    forgotPassword.ipChanged = this.authService.getIp(req);\n    forgotPassword.browserChanged = this.authService.getBrowserInfo(req);\n    forgotPassword.countryChanged = this.authService.getCountry(req);\n    await forgotPassword.save();\n  }\n\n  private async findForgotPasswordByEmail(\n    resetPasswordDto: ResetPasswordDto\n  ): Promise<ForgotPasswordDocument> {\n    const forgotPassword = await this.forgotPasswordModel.findOne({\n      email: resetPasswordDto.email,\n      firstUsed: true,\n      finalUsed: false,\n      expires: { $gt: new Date() },\n    });\n    if (!forgotPassword) {\n      throw new BadRequestException('Bad request.');\n    }\n    return forgotPassword;\n  }\n\n  private async setForgotPasswordFinalUsed(\n    forgotPassword: ForgotPasswordDocument\n  ) {\n    forgotPassword.finalUsed = true;\n    await forgotPassword.save();\n  }\n\n  private async resetUserPassword(resetPasswordDto: ResetPasswordDto) {\n    const user = await this.userModel.findOne({\n      email: resetPasswordDto.email,\n      verified: true,\n    });\n    user.password = resetPasswordDto.password;\n    await user.save();\n  }\n}\n","export const environment = {\n  production: false,\n  gnosysURL: 'localhost:4200',\n};\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"bcrypt\");","module.exports = require(\"class-validator\");","module.exports = require(\"cryptr\");","module.exports = require(\"date-fns\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"request-ip\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","module.exports = require(\"validator\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}